// peg4c.grmr
export = peg4c
import = peg4ctransform

whitespace(skip_token):
    "([ \t\r\n\v\f]+|(//[^\n]*\n)|(/\\*((\\*[^/])|[^*])*\\*/))+" // includes C-style comments as whitespace, but not line continuation
    //"[ \t\r\n\v\f]+"
    

string_literal:
    "'((\\\\')|[^'])*'" // need to add hex escape support
    
regex_literal:
    "\"([^\"\\\\]|(\\\\.))*\"" // need to add hex escape support

punctuator:
    '!' | '|' | ',' | '?' | '.' | '&' | ':' | '+' | '*' | '(' | ')' | '{' | '}' | '='

digit_seq:
    "[0-9]+"

keyword:
    'punctuator' | 'keyword' | 'token'

identifier:
    "[A-Za-z0-9_]+"

token:
    whitespace | string_literal | regex_literal | punctuator | identifier | keyword | digit_seq

nonws_printable:
    "[^ \t\r\n\v\f]+"

nonterminal:
    identifier

terminal:
    string_literal | regex_literal

base_rule:
    terminal | nonterminal | '(', choice, ')'

lookahead_rule(simplify_rule):
    ('&' | '!')?, base_rule

list_rule(simplify_rule):
    '.'.lookahead_rule

repeated_rule(simplify_rule):
    list_rule, ('+' | '*' | '?' | '{', digit_seq?, ','?, digit_seq?, '}')?

sequence(simplify_rule):
    ','.repeated_rule

choice(simplify_rule):
    '|'.sequence

special_production:
      'token', ':', choice 
    | ('punctuator' | 'keyword'), ':', '|'.string_literal

transform_functions:
    ','.nonws_printable

production: 
    identifier, ('(', transform_functions, ')')?, ':', choice

config: 
    identifier, '=', nonws_printable

peg4c(handle_peg4c):
    (config | special_production | production)+
